{"version":3,"file":"static/js/515.76fe851b.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.styled.jsx","redux/filter/selectors.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ConfirmAction/ConfirmAction.styled.jsx","components/ConfirmAction/ConfirmAction.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/App.styled.jsx","pages/Phonebook.jsx","styled/shared.styled.jsx"],"sourcesContent":["/** @format */\n\nexport const contactsState = state => state.contacts.items;\n\nexport const statusLoadingState = state => state.contacts.isLoading;\n\nexport const statusError = state => state.contacts.error;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const FilterField = styled.label`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 15px;\n\twidth: 320px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tfont-size: 26px;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 550px;\n\t}\n\n\t@media screen and (min-width: 1279px) {\n\t\twidth: 700px;\n\t}\n`;\n\nexport const InputFilter = styled.input`\n\tpadding: 10px 25px;\n\tborder-radius: ${p => p.theme.spacing(1)};\n\tborder: none;\n\toutline: 2px solid lightgray;\n\tfont-size: 24px;\n\tcolor: blue;\n\tmargin-bottom: 30px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\twidth: 90%;\n\tbox-shadow: 1px 1px 4px 2px rgba(128, 128, 128, 0.5);\n`;\n","/** @format */\n\nexport const filterState = state => state.filter.value;\n","/** @format */\n\nimport { FilterField, InputFilter } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterState } from 'redux/filter/selectors';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nfunction Filter() {\n\tconst dispatch = useDispatch();\n\tconst filterValue = useSelector(filterState);\n\n\treturn (\n\t\t<FilterField>\n\t\t\tFind contacts by name\n\t\t\t<InputFilter\n\t\t\t\tvalue={filterValue}\n\t\t\t\ttype='text'\n\t\t\t\tname='filter'\n\t\t\t\tautoComplete='off'\n\t\t\t\tonChange={({ target }) => dispatch(changeFilter(target.value))}\n\t\t\t/>\n\t\t</FilterField>\n\t);\n}\n\nexport default Filter;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const CardContact = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n\twidth: 100%;\n\tpadding-top: ${p => p.theme.spacing(15)};\n\tpadding-bottom: ${p => p.theme.spacing(4)};\n\tpadding-left: ${p => p.theme.spacing(3)};\n\tpadding-right: ${p => p.theme.spacing(3)};\n\tcursor: pointer;\n`;\n\nexport const ContactFiels = styled.div`\n\tdisplay: flex;\n\tgap: 4px;\n\twidth: 270px;\n\tfont-size: 16px;\n\toverflow: hidden;\n`;\n\nexport const ContactName = styled.span`\n\tdisplay: inline-block;\n\twidth: 72px;\n\tcolor: #000000b5;\n\twhite-space: nowrap;\n`;\n\nexport const ContactNumber = styled.span`\n\tdisplay: inline-block;\n\tcolor: darkblue;\n\twhite-space: nowrap;\n`;\n\nexport const DelButton = styled.button`\n\tposition: absolute;\n\ttop: 15px;\n\tright: 20px;\n\tborder-radius: ${p => p.theme.spacing(2)};\n\tfont-size: 16px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tcursor: pointer;\n\tbox-shadow: 0px 0px 4px 2px rgba(128, 128, 128, 0.5);\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\tmin-width: 30px;\n\theight: 30px;\n\n\t&:hover {\n\t\tbackground-color: antiquewhite;\n\t\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n`;\n\nexport const Gender = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: absolute;\n\ttop: 15px;\n\tleft: 20px;\n\tborder-radius: ${p => p.theme.spacing(2)};\n\tfont-size: 16px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tcursor: pointer;\n\tbox-shadow: 0px 0px 4px 2px rgba(128, 128, 128, 0.5);\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\tmin-width: 30px;\n\theight: 30px;\n\n\t&:hover {\n\t\tbackground-color: antiquewhite;\n\t\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n`;\n","/** @format */\n\nimport styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormBox = styled(Form)`\n\tdisplay: flex;\n\twidth: 355px;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: flex-start;\n\tgap: ${p => p.theme.spacing(3)};\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 650px;\n\t\tpadding-top: 10px;\n\t}\n`;\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tgap: 10px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tpadding-top: 10px;\n\n\t@media screen and (min-width: 768px) {\n\t\tgap: 24px;\n\t\tpadding-bottom: 20px;\n\t}\n`;\n\nexport const ContactBox = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n\tmargin-bottom: 10px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\n\t@media screen and (min-width: 768px) {\n\t\tgap: 20px;\n\t\tmargin-bottom: 30px;\n\t}\n`;\n\nexport const InputContainer = styled.div`\n\tdisplay: flex;\n\tgap: 6px;\n\tflex-direction: column;\n\tcursor: inherit;\n`;\n\nexport const ContactInput = styled(Field)`\n\twidth: 170px;\n\tmargin: 0;\n\tmargin-right: auto;\n\tpadding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(1)};\n\tfont-size: 18px;\n\tcolor: darkblue;\n\tborder: none;\n\tbackground-color: transparent;\n\tborder-radius: 6px;\n\tcursor: inherit;\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding: ${p => p.theme.spacing(3)} ${p => p.theme.spacing(2)};\n\t\tfont-size: 22px;\n\t\twidth: 405px;\n\t}\n\n\t&:focus {\n\t\toutline: 1px solid red;\n\t}\n`;\n\nexport const Label = styled.label`\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 5px;\n\twidth: 100%;\n\tfont-size: 18px;\n\tfont-weight: 600;\n\tborder-radius: 6px;\n\tcursor: inherit;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 22px;\n\t}\n`;\n\nexport const LabelName = styled.span`\n\twidth: 68px;\n\tcursor: inherit;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 85px;\n\t}\n`;\n\nexport const Avatar = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\ttext-align: center;\n\twidth: 100px;\n\theight: 100px;\n\tfont-size: 70px;\n\tborder-radius: 50%;\n\tbackground-color: lightsteelblue;\n`;\n\nexport const customStyles = {\n\tcontent: {\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\tright: 'auto',\n\t\tbottom: 'auto',\n\t\tmarginRight: '-50%',\n\t\ttransform: 'translate(-50%, -50%)',\n\t\tbackgroundColor: 'whitesmoke',\n\t\tborderRadius: '8px',\n\t},\n};\n","/** @format */\n\nimport Modal from 'react-modal';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, useFormik } from 'formik';\nimport { statusLoadingState, contactsState, statusError } from 'redux/contacts/selectors';\nimport {\n\tFormBox,\n\tContactInput,\n\tButtonsContainer,\n\tInputContainer,\n\tLabel,\n\tLabelName,\n\tAvatar,\n\tContactBox,\n\tcustomStyles,\n} from './Modal.styled';\nimport { Button } from 'styled/shared.styled';\nimport { fetchPutContact } from 'redux/contacts/fetchApi';\nimport { checkContact, toastError, schema, getGenderIcon } from 'components/Helpers';\n\nModal.setAppElement('#modal-root');\n\nconst ModalWindow = ({ modalIsOpen, closeModal, deleteContact, contact }) => {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(contactsState);\n\tconst error = useSelector(statusError);\n\tconst [editContact, setEditContact] = useState({\n\t\t_id: '',\n\t\tname: '',\n\t\tphone: '',\n\t\temail: '',\n\t\tgender: '',\n\t});\n\tconst [editEnable, setEditEnable] = useState(false);\n\tconst [cancelEditContact, setCancelEditContact] = useState(false);\n\tconst nameInput = useRef(null);\n\tconst emailInput = useRef(null);\n\tconst phoneInput = useRef(null);\n\tconst cancelPutContact = useRef(null);\n\tconst statusLoading = useSelector(statusLoadingState);\n\n\tconst { _id, name, phone, email, gender } = contact;\n\tconst avatarComponent = <Avatar>{getGenderIcon(gender)}</Avatar>;\n\n\tconst idle = !editEnable && !cancelEditContact;\n\tconst edit = editEnable && !cancelEditContact;\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\t_id,\n\t\t\tname,\n\t\t\tphone,\n\t\t\temail,\n\t\t\tgender,\n\t\t},\n\t\tonSubmit: contact => {\n\t\t\thandlePutContact(contact);\n\t\t},\n\t});\n\n\tuseEffect(() => {\n\t\tif (!statusLoading) {\n\t\t\tsetCancelEditContact(false);\n\t\t}\n\t\tif (error) {\n\t\t\tformik.setFieldValue('name', editContact.name);\n\t\t\tformik.setFieldValue('phone', editContact.phone);\n\t\t\tformik.setFieldValue('email', editContact.email);\n\t\t\tformik.setFieldValue('gender', editContact.gender);\n\t\t}\n\t}, [\n\t\teditContact.email,\n\t\teditContact.gender,\n\t\teditContact.name,\n\t\teditContact.phone,\n\t\terror,\n\t\tformik,\n\t\tstatusLoading,\n\t]);\n\n\tuseEffect(() => {\n\t\tif (!nameInput.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (editEnable) {\n\t\t\tsetEditContact(contact);\n\t\t\tnameInput.current.style = 'background-color: #fcfcfc;';\n\t\t\temailInput.current.style = 'background-color: #fcfcfc;';\n\t\t\tphoneInput.current.style = 'background-color: #fcfcfc;';\n\t\t\tnameInput.current.focus();\n\t\t} else {\n\t\t\tnameInput.current.style = 'background-color: transparent;';\n\t\t\temailInput.current.style = 'background-color: transparent;';\n\t\t\tphoneInput.current.style = 'background-color: transparent;';\n\t\t}\n\t}, [contact, editEnable]);\n\n\tconst handleEditContact = e => {\n\t\tsetEditEnable(true);\n\t};\n\n\tconst handlePutContact = contact => {\n\t\tsetEditContact(contact);\n\t\tschema\n\t\t\t.validate(contact)\n\t\t\t.then(() => {\n\t\t\t\tconst { _id, name } = contact;\n\t\t\t\tconst status = checkContact(contacts, name, email, phone, _id);\n\t\t\t\tif (!status) {\n\t\t\t\t\tsetEditEnable(false);\n\t\t\t\t\tcancelPutContact.current = dispatch(fetchPutContact({ contact }));\n\t\t\t\t\tsetCancelEditContact(true);\n\t\t\t\t} else toastError(`Please change contacts.`);\n\t\t\t})\n\t\t\t.catch(validationErrors => {\n\t\t\t\ttoastError(`Error: ${validationErrors.errors}`);\n\t\t\t});\n\t};\n\n\tconst handleCancelEditContact = () => {\n\t\tsetEditEnable(false);\n\t\tformik.setFieldValue('name', name);\n\t\tformik.setFieldValue('phone', phone);\n\t\tformik.setFieldValue('email', email);\n\t};\n\n\tconst afterOpenModal = () => {\n\t\tformik.setFieldValue('name', name);\n\t\tformik.setFieldValue('phone', phone);\n\t\tformik.setFieldValue('email', email);\n\t};\n\n\tconst handleModalClose = () => {\n\t\tformik.resetForm();\n\t\tcloseModal();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tisOpen={modalIsOpen}\n\t\t\t\tstyle={customStyles}\n\t\t\t\tonAfterOpen={afterOpenModal}\n\t\t\t\tonRequestClose={handleModalClose}\n\t\t\t\tcontentLabel='Contact info'\n\t\t\t>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t_id: formik.values._id,\n\t\t\t\t\t\tname: formik.values.name,\n\t\t\t\t\t\tphone: formik.values.phone,\n\t\t\t\t\t\temail: formik.values.email,\n\t\t\t\t\t\tgender: formik.values.gender,\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={formik.handleSubmit}\n\t\t\t\t>\n\t\t\t\t\t<FormBox>\n\t\t\t\t\t\t<ContactBox>\n\t\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t\t<Label ref={nameInput}>\n\t\t\t\t\t\t\t\t\t<LabelName>Name:</LabelName>\n\t\t\t\t\t\t\t\t\t<ContactInput\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('name')}\n\t\t\t\t\t\t\t\t\t\tdisabled={!editEnable}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Label ref={emailInput}>\n\t\t\t\t\t\t\t\t\t<LabelName>Email:</LabelName>\n\t\t\t\t\t\t\t\t\t<ContactInput\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('email')}\n\t\t\t\t\t\t\t\t\t\tdisabled={!editEnable}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t<Label ref={phoneInput}>\n\t\t\t\t\t\t\t\t\t<LabelName>Phone:</LabelName>\n\t\t\t\t\t\t\t\t\t<ContactInput\n\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\ttype='tel'\n\t\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('phone')}\n\t\t\t\t\t\t\t\t\t\tdisabled={!editEnable}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t\t\t<>{avatarComponent}</>\n\t\t\t\t\t\t</ContactBox>\n\n\t\t\t\t\t\t<ButtonsContainer>\n\t\t\t\t\t\t\t{edit && (\n\t\t\t\t\t\t\t\t<Button type='submit' disabled={statusLoading}>\n\t\t\t\t\t\t\t\t\t✅\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{idle && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\tdisabled={statusLoading}\n\t\t\t\t\t\t\t\t\tonClick={handleEditContact}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{cancelEditContact && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\tdisabled={!statusLoading}\n\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\tcancelPutContact.current?.abort();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t❌\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tdisabled={!editEnable}\n\t\t\t\t\t\t\t\tonClick={handleCancelEditContact}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t↪️\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tid={_id}\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tdisabled={statusLoading}\n\t\t\t\t\t\t\t\tonClick={deleteContact}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button type='button' onClick={handleModalClose}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonsContainer>\n\t\t\t\t\t</FormBox>\n\t\t\t\t</Formik>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default ModalWindow;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tgap: 10px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tpadding-top: 10px;\n\tpadding-bottom: 10px;\n\n\t@media screen and (min-width: 768px) {\n\t\tgap: 24px;\n\t}\n`;\n\nexport const customStyles = {\n\tcontent: {\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\tright: 'auto',\n\t\tbottom: 'auto',\n\t\tmarginRight: '-50%',\n\t\ttransform: 'translate(-50%, -50%)',\n\t\tbackgroundColor: 'whitesmoke',\n\t\tborderRadius: '8px',\n\t},\n};\n","/** @format */\n\nimport Modal from 'react-modal';\nimport { useSelector } from 'react-redux';\nimport { statusLoadingState } from 'redux/contacts/selectors';\nimport { ButtonsContainer, customStyles } from './ConfirmAction.styled';\nimport { Button } from 'styled/shared.styled';\n\nModal.setAppElement('#modal-root');\n\nconst ConfirmAction = ({ modalIsOpen, closeModal, confirmAction, contact }) => {\n\tconst statusLoading = useSelector(statusLoadingState);\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tisOpen={modalIsOpen}\n\t\t\t\tstyle={customStyles}\n\t\t\t\tonRequestClose={closeModal}\n\t\t\t\tcontentLabel='Confirm Action'\n\t\t\t>\n\t\t\t\t<ButtonsContainer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tid={contact._id}\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tdisabled={statusLoading}\n\t\t\t\t\t\tonClick={confirmAction}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type='button' onClick={closeModal}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonsContainer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default ConfirmAction;\n","/** @format */\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n\tContactFiels,\n\tContactName,\n\tContactNumber,\n\tCardContact,\n\tDelButton,\n\tGender,\n} from './Contact.styled';\nimport ModalWindow from 'components/Modal';\nimport ConfirmAction from 'components/ConfirmAction';\nimport { animationButton, toastInfo, getGenderIcon } from 'components/Helpers';\nimport { fetchDelContact } from 'redux/contacts/fetchApi';\n\nfunction Contact({ contact }) {\n\tconst dispatch = useDispatch();\n\tconst [modalIsOpen, setIsOpen] = useState(false);\n\tconst [confirmWindowIsOpen, setConfirmWindowIsOpen] = useState(false);\n\n\tconst { _id, name, email, gender, phone } = contact;\n\n\tconst openModal = ({ target }) => {\n\t\tif (target.nodeName === 'BUTTON') {\n\t\t\treturn;\n\t\t}\n\t\tsetIsOpen(true);\n\t};\n\n\tconst closeModal = () => {\n\t\tsetIsOpen(false);\n\t};\n\n\tconst closeModalConfirmwindow = () => {\n\t\tsetConfirmWindowIsOpen(false);\n\t};\n\n\tconst handleDeleteContact = e => {\n\t\tanimationButton(e);\n\t\tdispatch(fetchDelContact({ id: _id }));\n\t\ttoastInfo(`Contact deleted.`);\n\t\tif (modalIsOpen) closeModalConfirmwindow();\n\t};\n\n\tconst openConfirmWindow = () => {\n\t\tsetConfirmWindowIsOpen(true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<CardContact onClick={openModal}>\n\t\t\t\t<Gender>{getGenderIcon(gender)}</Gender>\n\t\t\t\t<ContactFiels>\n\t\t\t\t\t<ContactName>🖌️ Name:</ContactName>\n\t\t\t\t\t<ContactNumber>{name}</ContactNumber>\n\t\t\t\t</ContactFiels>\n\t\t\t\t<ContactFiels>\n\t\t\t\t\t<ContactName>✉️ Email:</ContactName>\n\t\t\t\t\t<ContactNumber>{email}</ContactNumber>\n\t\t\t\t</ContactFiels>\n\t\t\t\t<ContactFiels>\n\t\t\t\t\t<ContactName>📞 Phone:</ContactName>\n\t\t\t\t\t<ContactNumber>{phone}</ContactNumber>\n\t\t\t\t</ContactFiels>\n\t\t\t\t<DelButton type='button' onClick={openConfirmWindow}>\n\t\t\t\t\t🗑️\n\t\t\t\t</DelButton>\n\t\t\t</CardContact>\n\t\t\t<ModalWindow\n\t\t\t\tmodalIsOpen={modalIsOpen}\n\t\t\t\tcloseModal={closeModal}\n\t\t\t\tdeleteContact={openConfirmWindow}\n\t\t\t\tcontact={{ _id, name, phone, email, gender }}\n\t\t\t/>\n\t\t\t<ConfirmAction\n\t\t\t\tmodalIsOpen={confirmWindowIsOpen}\n\t\t\t\tcloseModal={closeModalConfirmwindow}\n\t\t\t\tconfirmAction={handleDeleteContact}\n\t\t\t\tcontact={{ _id }}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default Contact;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const ContactsBox = styled.ul`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 15px;\n\trow-gap: 20px;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tpadding: 0;\n\tpadding-bottom: 40px;\n`;\n\nexport const ContactContainer = styled.li`\n\tdisplay: flex;\n\talign-items: center;\n\toutline: 1px solid lightgray;\n\tborder-radius: 8px;\n\tbox-shadow: 0px 0px 4px 2px rgba(128, 128, 128, 0.5);\n\tbackground-color: #fafaf7;\n\n\t@media screen and (max-width: 767px) {\n\t\twidth: 97%;\n\t}\n\n\t@media screen and (min-width: 768px) and (max-width: 1279px) {\n\t\twidth: calc((100% - 15px) / 2);\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\twidth: calc((100% - 30px) / 3);\n\t}\n`;\n","/** @format */\n\nimport { useEffect, useState } from 'react';\nimport { useDebounce } from 'react-use';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Contact from 'components/Contact';\nimport { ContactContainer, ContactsBox } from './ContactList.styled';\nimport { contactsState } from 'redux/contacts/selectors';\nimport { filterState } from 'redux/filter/selectors';\nimport { fetchAllContacts } from 'redux/contacts/fetchApi';\n\nfunction ContactList() {\n\tconst dispatch = useDispatch();\n\tconst filterValue = useSelector(filterState);\n\tconst contacts = useSelector(contactsState);\n\tconst [filteredContacts, setFilteredContacts] = useState([]);\n\n\tuseDebounce(\n\t\t() => {\n\t\t\tconst filtered = contacts\n\t\t\t\t? contacts\n\t\t\t\t\t\t.filter(contact =>\n\t\t\t\t\t\t\tcontact.name.toLowerCase().includes(filterValue?.toLowerCase())\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.reverse()\n\t\t\t\t: [];\n\t\t\tsetFilteredContacts(filtered);\n\t\t},\n\t\t250,\n\t\t[contacts, filterValue]\n\t);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchAllContacts());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<ContactsBox>\n\t\t\t{filteredContacts?.map(contact => (\n\t\t\t\t<ContactContainer key={contact._id}>\n\t\t\t\t\t<Contact contact={contact} />\n\t\t\t\t</ContactContainer>\n\t\t\t))}\n\t\t</ContactsBox>\n\t);\n}\n\nexport default ContactList;\n","/** @format */\n\nimport styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormikContact = styled(Form)`\n\tbox-sizing: border-box;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tpadding: 15px 20px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tborder-radius: ${p => p.theme.spacing(4)};\n\tbox-shadow: 0px 0px 8px 4px rgba(128, 128, 128, 0.5);\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding: 30px 45px;\n\t}\n`;\n\nexport const Label = styled.label`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n\tmargin-bottom: ${p => p.theme.spacing(4)};\n\tfont-size: 20px;\n\tfont-weight: 600;\n`;\n\nexport const InputFormik = styled(Field)`\n\tpadding: 8px 20px;\n\tborder-radius: ${p => p.theme.spacing(1)};\n\tborder: none;\n\toutline: 2px solid lightgray;\n\tfont-size: 20px;\n\tcolor: blue;\n`;\n\nexport const SelectFormik = styled.select`\n\tpadding: 10px 30px 10px 15px;\n\tborder-radius: ${p => p.theme.spacing(1)};\n\tborder: none;\n\toutline: 2px solid lightgray;\n\tfont-size: 16px;\n\tcolor: blue;\n\n\tappearance: none;\n\tbackground: url('https://cdn-icons-png.flaticon.com/512/60/60995.png') no-repeat right center;\n\tbackground-size: 14px 14px;\n\tbackground-position-x: calc(100% - 10px);\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 20px;\n\t\tbackground-position-x: calc(100% - 20px);\n\t\tbackground-size: 20px 20px;\n\t\twidth: 160px;\n\t}\n`;\n\nexport const AddButton = styled.button`\n\tborder-radius: 6px;\n\tfont-size: 16px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tcursor: pointer;\n\tbox-shadow: 0px 0px 4px 2px rgba(128, 128, 128, 0.5);\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\twidth: 80px;\n\theight: 43px;\n\tmargin-bottom: ${p => p.theme.spacing(4)};\n\tmargin-left: auto;\n\n\t&:hover {\n\t\tbackground-color: antiquewhite;\n\t\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\tmin-width: 200px;\n\t\tfont-size: 20px;\n\t}\n`;\n\nexport const CancelButton = styled.button`\n\tborder-radius: 6px;\n\tfont-size: 22px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tcursor: pointer;\n\tbox-shadow: 0px 0px 4px 2px rgba(128, 128, 128, 0.5);\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\tmin-width: 50px;\n\theight: 43px;\n\tmargin-left: 10px;\n\twidth: fit-content;\n\tmargin-bottom: ${p => p.theme.spacing(4)};\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-left: 25px;\n\t}\n\n\t&:hover {\n\t\tbackground-color: antiquewhite;\n\t\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n`;\n\nexport const ButtonDiv = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: end;\n`;\n","/** @format */\n\nimport { useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { contactsState, statusLoadingState } from 'redux/contacts/selectors';\nimport { fetchPostContact } from 'redux/contacts/fetchApi';\nimport { toastError, animationButton, checkContact, schema } from '../Helpers';\nimport {\n\tLabel,\n\tFormikContact,\n\tInputFormik,\n\tSelectFormik,\n\tAddButton,\n\tCancelButton,\n\tButtonDiv,\n} from './ContactForm.styled.jsx';\n\nfunction ContactForm() {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(contactsState);\n\tconst statusLoading = useSelector(statusLoadingState);\n\tconst cancelAddContact = useRef(null);\n\tconst [gender, setGender] = useState('other');\n\n\tconst handleGenderChange = ({ target }) => {\n\t\tsetGender(target.value);\n\t};\n\n\tconst handleAddContact = ({ name, email, phone }) => {\n\t\tconst status = checkContact(contacts, name, email, phone);\n\t\tif (!status) {\n\t\t\tconst contact = { name, gender, email, phone };\n\t\t\tcancelAddContact.current = dispatch(fetchPostContact({ contact }));\n\t\t} else toastError(`${name} is already in contacts.`);\n\t\treturn status;\n\t};\n\n\tconst handleSubmit = async (contact, actions) => {\n\t\ttry {\n\t\t\tconst newContact = { ...contact, gender };\n\t\t\tawait schema.validate(newContact);\n\t\t\tconst status = handleAddContact(newContact);\n\t\t\tif (!status) {\n\t\t\t\tactions.resetForm();\n\t\t\t\tsetGender('other');\n\t\t\t}\n\t\t} catch (validationErrors) {\n\t\t\ttoastError(`Error: ${validationErrors.errors}`);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tname: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\tphone: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t>\n\t\t\t\t<FormikContact>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tName\n\t\t\t\t\t\t<InputFormik\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+([' \\-]?[a-zA-Zа-яА-Я ])*$\"\n\t\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tplaceholder='Aneta'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Label>\n\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tEmail\n\t\t\t\t\t\t<InputFormik\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\ttitle='Please enter a valid email address.'\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tplaceholder='aneta@gmail.com'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Label>\n\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tPhone\n\t\t\t\t\t\t<InputFormik\n\t\t\t\t\t\t\ttype='tel'\n\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\tpattern='\\+?\\d{1,4}[\\-.\\s]?\\(?\\d{1,3}\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}'\n\t\t\t\t\t\t\ttitle='Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tplaceholder='48-787-453-876'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Label>\n\t\t\t\t\t<ButtonDiv>\n\t\t\t\t\t\t<Label>\n\t\t\t\t\t\t\tGender\n\t\t\t\t\t\t\t<SelectFormik value={gender} onChange={handleGenderChange}>\n\t\t\t\t\t\t\t\t<option value='other'>Other</option>\n\t\t\t\t\t\t\t\t<option value='male'>Male</option>\n\t\t\t\t\t\t\t\t<option value='female'>Female</option>\n\t\t\t\t\t\t\t\t<option value='business'>Вusiness</option>\n\t\t\t\t\t\t\t</SelectFormik>\n\t\t\t\t\t\t</Label>\n\n\t\t\t\t\t\t<AddButton type='submit' onClick={animationButton} disabled={statusLoading}>\n\t\t\t\t\t\t\tAdd contact\n\t\t\t\t\t\t</AddButton>\n\t\t\t\t\t\t<CancelButton\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tdisabled={!statusLoading}\n\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\tanimationButton(e);\n\t\t\t\t\t\t\t\tcancelAddContact.current?.abort();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t❌\n\t\t\t\t\t\t</CancelButton>\n\t\t\t\t\t</ButtonDiv>\n\t\t\t\t</FormikContact>\n\t\t\t</Formik>\n\t\t</>\n\t);\n}\n\nexport default ContactForm;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n\tpadding: 0 30px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\n\t&:last-child {\n\t\tmargin-bottom: 40px;\n\t}\n\n\t@media screen and (max-width: 767px) {\n\t\twidth: 400px;\n\t}\n\n\t@media screen and (min-width: 768px) and (max-width: 1279px) {\n\t\twidth: 768px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\twidth: 1280px;\n\t}\n`;\n\nexport const TitleName = styled.h2`\n\tmargin: 24px 0;\n\tpadding: 0 30px;\n\tfont-size: 36px;\n`;\n\nexport const FormBox = styled.div`\n\twidth: 330px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 550px;\n\t}\n\n\t@media screen and (min-width: 1279px) {\n\t\twidth: 650px;\n\t}\n`;\n\nexport const MenuLog = styled.div`\n\twidth: 340px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 730px;\n\t}\n`;\n","/** @format */\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { statusError } from 'redux/contacts/selectors';\nimport { resetError } from 'redux/contacts/contactsSlice';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport { TitleName, FormBox } from 'components/App.styled';\nimport { Container } from 'styled/shared.styled';\nimport { toastError } from 'components/Helpers';\n\nfunction Phonebook() {\n\tconst error = useSelector(statusError);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (error !== null) toastError(`Error loading contacts: ${error}`);\n\t\tdispatch(resetError());\n\t}, [dispatch, error]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<FormBox>\n\t\t\t\t<TitleName>Phonebook</TitleName>\n\t\t\t\t<ContactForm />\n\t\t\t</FormBox>\n\t\t\t<FormBox>\n\t\t\t\t<TitleName>Contacts</TitleName>\n\t\t\t</FormBox>\n\n\t\t\t<Filter />\n\n\t\t\t<ContactList />\n\t\t</Container>\n\t);\n}\n\nexport default Phonebook;\n","/** @format */\n\nimport styled from 'styled-components';\nimport Link from '@mui/material/Link';\n\nexport const Container = styled.div`\n\tpadding: 0 30px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\n\t@media screen and (max-width: 767px) {\n\t\twidth: 400px;\n\t}\n\n\t@media screen and (min-width: 768px) and (max-width: 1279px) {\n\t\twidth: 768px;\n\t\tpadding: 0 60px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\twidth: 1150px;\n\t\tpadding: 0 90px;\n\t}\n`;\n\nexport const Button = styled.button`\n\tborder-radius: ${p => p.theme.spacing(2)};\n\tfont-size: 16px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tcursor: pointer;\n\tbox-shadow: 0px 0px 4px 2px rgba(128, 128, 128, 0.5);\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\tmin-width: 30px;\n\theight: 34px;\n\n\t&:hover {\n\t\tbackground-color: antiquewhite;\n\t\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 20px;\n\t\tmin-width: 80px;\n\t\theight: 40px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\tfont-size: 22px;\n\t}\n`;\n\nexport const ButtonBox = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\tmargin-top: 35px;\n\tgap: 10px;\n`;\n\nexport const FormBox = styled.form`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tgap: 20px;\n\tpadding: 35px 15px;\n\tborder-radius: 12px;\n\tborder: 0.5px solid black;\n\tmax-width: 400px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n`;\n\nexport const TextBox = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tgap: 25px;\n\tpadding: 35px 15px;\n\tborder-radius: 12px;\n\tborder: 0.5px solid black;\n\tmax-width: 400px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tlist-style: none;\n`;\n\nexport const User = styled.span`\n\tfont-weight: 700;\n\tcolor: crimson;\n`;\n\nexport const Text = styled.li`\n\ttext-align: justify;\n`;\n\nexport const Redirect = styled.li`\n\tfont-size: 12px;\n`;\n\nexport const Form = styled.form`\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tpadding: 10px;\n\tborder-radius: ${p => p.theme.spacing(2)};\n\tfont-size: 16px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tbox-shadow: 0px 0px 4px 2px rgba(128, 128, 128, 0.5);\n\tmin-height: 300px;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 18px;\n\t\tpadding: 20px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\tpadding: 50px;\n\t}\n`;\n\nexport const Label = styled.label`\n\tfont-size: 16px;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 18px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\tfont-size: 22px;\n\t}\n`;\n\nexport const Input = styled.input`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 5px;\n\tborder-radius: ${p => p.theme.spacing(1)};\n\tfont-size: 16px;\n\tborder: 1px solid rgba(0, 0, 0, 0.7);\n\tcursor: pointer;\n\tmargin-top: 5px;\n\twidth: 100%;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 18px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\tfont-size: 22px;\n\t}\n`;\nexport const FlexBoxMain = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tflex-direction: column;\n\tgap: 30px;\n\n\t@media screen and (min-width: 768px) {\n\t\tflex-direction: row;\n\t}\n`;\n\nexport const FlexBoxSection = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-between;\n\tgap: 12px;\n`;\n\nexport const FlexBox = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-between;\n\tgap: 4px;\n\tborder: 1px solid darkslateblue;\n\tborder-radius: ${p => p.theme.spacing(3)};\n\tpadding: ${p => p.theme.spacing(3)};\n`;\n\nexport const Img = styled.img`\n\twidth: 180px;\n\theight: 180px;\n\tobject-fit: cover;\n\tborder-radius: 50%;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 250px;\n\t\theight: 250px;\n\t\tmargin-top: 0;\n\t}\n`;\n\nexport const TextMessage = styled.h1`\n\ttext-align: center;\n\tmargin-top: 70px;\n`;\n\nexport const LinkHome = styled(Link)`\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n\nexport const ImgBox = styled(Link)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding-top: 60px;\n`;\n"],"names":["contactsState","state","contacts","items","statusLoadingState","isLoading","statusError","error","FilterField","styled","label","_templateObject","_taggedTemplateLiteral","InputFilter","input","_templateObject2","p","theme","spacing","filterState","filter","value","dispatch","useDispatch","filterValue","useSelector","_jsxs","children","_jsx","type","name","autoComplete","onChange","_ref","target","changeFilter","CardContact","div","ContactFiels","ContactName","span","_templateObject3","ContactNumber","_templateObject4","DelButton","button","_templateObject5","Gender","_templateObject6","FormBox","Form","ButtonsContainer","ContactBox","InputContainer","ContactInput","Field","Label","LabelName","_templateObject7","Avatar","_templateObject8","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","borderRadius","Modal","modalIsOpen","closeModal","deleteContact","contact","editContact","setEditContact","useState","_id","phone","email","gender","editEnable","setEditEnable","cancelEditContact","setCancelEditContact","nameInput","useRef","emailInput","phoneInput","cancelPutContact","statusLoading","avatarComponent","getGenderIcon","idle","edit","formik","useFormik","initialValues","onSubmit","handlePutContact","useEffect","setFieldValue","current","style","focus","schema","validate","then","checkContact","toastError","fetchPutContact","catch","validationErrors","concat","errors","handleModalClose","resetForm","_Fragment","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","Formik","values","handleSubmit","ref","getFieldProps","disabled","Button","onClick","e","_cancelPutContact$cur","abort","handleCancelEditContact","id","confirmAction","setIsOpen","confirmWindowIsOpen","setConfirmWindowIsOpen","closeModalConfirmwindow","openConfirmWindow","_ref2","nodeName","ModalWindow","ConfirmAction","animationButton","fetchDelContact","toastInfo","ContactsBox","ul","ContactContainer","li","filteredContacts","setFilteredContacts","useDebounce","filtered","toLowerCase","includes","reverse","fetchAllContacts","map","Contact","FormikContact","InputFormik","SelectFormik","select","AddButton","CancelButton","ButtonDiv","cancelAddContact","setGender","async","actions","newContact","status","fetchPostContact","handleAddContact","pattern","title","required","placeholder","_cancelAddContact$cur","TitleName","h2","resetError","Container","ContactForm","Filter","ContactList","ButtonBox","form","_templateObject9","_templateObject10","Input","_templateObject11","FlexBoxMain","_templateObject12","FlexBoxSection","_templateObject13","FlexBox","_templateObject14","Img","img","_templateObject15","TextMessage","h1","_templateObject16","LinkHome","Link","_templateObject17","ImgBox","_templateObject18"],"sourceRoot":""}